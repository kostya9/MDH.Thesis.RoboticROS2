property{
	define {
		isOnTargetPosition = rh.posX == r.targetX && rh.posY == r.targetY;
		finish = r.finish;
		hasMoved = rh.rot != rh.prevRot || rh.posX != rh.prevPosX || rh.posY != rh.prevPosY;
		isFirstState = rh.isFirstState;
		
		//isOnTargetPosition1 = rh1.posX == r1.targetX && rh1.posY == r1.targetY;
		//finish1 = r1.finish;
		//hasMoved1 = rh1.rot != rh1.prevRot || rh1.posX != rh1.prevPosX || rh1.posY != rh1.prevPosY;
		//isFirstState1 = rh1.isFirstState;
	}

	Assertion {
		isRotatingOrMovingWhenNotFinished: finish || isFirstState || (!finish && hasMoved);
		isOnTargetPositionWhenFinished: !finish || (finish && isOnTargetPosition);
		
		//isRotatingOrMovingWhenNotFinished1: finish1 || isFirstState1 || (!finish1 && hasMoved1);
		//isOnTargetPositionWhenFinished1: !finish1 || (finish1 && isOnTargetPosition1);
	}
}